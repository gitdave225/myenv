AWSTemplateFormatVersion: '2010-09-09'
Description: ALB with ASG Parent Stack
Parameters:
  Env:
    Type: String
    Default: sandbox
    AllowedValues:
      - prod
      - nonprod
      - sandbox
    Description: 'Deployment Environment'

  ContactInfo:
    Type: String
    Default: 'Client Group'
    Description: 'Contact for Client'

  ContactEmail:
    Type: String
    Default: 'clientgroup@company.info'
    Description: 'Contact email for Client'

  ClientKey:
    Type: AWS::EC2::KeyPair::KeyName

  AmzInstance:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
    Description: 'Server Instance'

  MinFS:
    Type: String
    Default: '1'
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
    Description: 'Minimum ASG fleet size'

  MaxFS:
    Type: String
    Default: '1'
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
    Description: 'Maximum ASG fleet size'

  HighCPUAlarm:
    Type: Number
    Default: '50'
    AllowedValues:
      - '50'
      - '60'
      - '70'
      - '80'
      - '90'
      - '100'
    Description: 'High CPU Threshold for Instances'

  LowCPUAlarm:
    Type: Number
    Default: '20'
    AllowedValues:
      - '10'
      - '20'
      - '30'
      - '40'
    Description: 'Low CPU Threshold for Instances'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Client Setup
      Parameters:
      - Env
      - ClientKey
      - AmzInstance
      - MinFS
      - MaxFS
      - HighCPUAlarm
      - LowCPUAlarm
    - Label:
        default: Tags
      Parameters:
      - ContactInfo
      - ContactEmail
    ParameterLabels:
      Env:
        default: VPC Application Environment
      AmzIntance:
        default: Server Type for your fleet
      MinFS:
        default: Set the minimum number of web servers for this stack
      MaxFS:
        default: Set the maximum number of web servers for this stack
      HighCPUAlarm:
        default: Define how busy a server is before adding more instances
      LowCPUAlarm:
        default: Define how quiet a server is before removing instances
      ContactInfo:
        default: Contact group or person responsible for the VPC
      ContactEmail:
        default: Contact email

Mappings:
  MapRegion:
    us-east-1:
      Name: ue1
    us-west-2:
      Name: ue2

Resources:
  ClientIAM:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Env: !Ref Env
        ThisRegion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name]
      TemplateURL: !Sub
        - 'https://s3.amazonaws.com/client-s3-${mapregion}/${theenv}/iam.yaml'
        - { mapregion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name], theenv: !Ref Env }
      TimeoutInMinutes: 15

  ClientSG:
    Type: AWS::CloudFormation::Stack
    DependsOn: ClientIAM
    Properties:
      Parameters:
        Env: !Ref Env
        ContactInfo: !Ref ContactInfo
        ContactEmail: !Ref ContactEmail
        VPCInfo:
          Fn::ImportValue: !Sub
          - '${mapregion}-VPC-VPCID'
          - { mapregion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name] }
        BastionSG: !ImportValue ClientBastion-Bastion-SG
      TemplateURL: !Sub
        - 'https://s3.amazonaws.com/client-s3-${mapregion}/${theenv}/sg.yaml'
        - { mapregion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name], theenv: !Ref Env }
      TimeoutInMinutes: 15

  ClientFleet:
    Type: AWS::CloudFormation::Stack
    DependsOn: ClientSG
    Properties:
      Parameters:
        Env: !Ref Env
        ContactInfo: !Ref ContactInfo
        ContactEmail: !Ref ContactEmail
        ClientKey: !Ref ClientKey
        AmzInstance: !Ref AmzInstance
        MinFS: !Ref MinFS
        MaxFS: !Ref MaxFS
        VPCInfo:
          Fn::ImportValue: !Sub
          - '${mapregion}-VPC-VPCID'
          - { mapregion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name] }
        ThisRegion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name]
        InstanceProfile: !GetAtt ClientIAM.Outputs.InstanceProfile
        ALBSG: !GetAtt ClientSG.Outputs.ALBSG
        ASGSG: !GetAtt ClientSG.Outputs.ASGSG
        HighCPUAlarm: !Ref HighCPUAlarm
        LowCPUAlarm: !Ref LowCPUAlarm
      TemplateURL: !Sub
        - 'https://s3.amazonaws.com/client-s3-${mapregion}/${theenv}/fleet.yaml'
        - { mapregion: !FindInMap [MapRegion, !Ref 'AWS::Region', Name], theenv: !Ref Env }
      TimeoutInMinutes: 30

# Outputs:
